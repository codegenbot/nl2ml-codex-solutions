import os
import sys
import numpy as np
import math
import datetime
import collections
import itertools
import queue
import re
"""
This problem gives 3 strings. The first two represent a cipher, mapping each character in one string to the one at the same index in the other string. The program must apply this cipher to the third string and return the deciphered message.
For example,
input:
a
b
a
output:
b
input:
a
b
b
output:
a
input:
a
b
aa
output:
bb
input:
a
b
ab
output:
ba
input:
a
b
bab
output:
aba
input:
a
b
baa
output:
abb
input:
a
b
baab
output:
abba
input:
a
b
baabb
output:
abbab
input:
a
b
baaabb
output:
abbbab
input:
a
b
baaabbb
output:
abbbbab
input:
a
b
baaabbbb
output:
abbbbbab
input:
a
b
baaabbbbb
output:
abbbbbbab
input:
a
b
baaabbbbbb
output:
abbbbbbbab
input:
a
b
baaabbbbbbb
output:
abbbbbbbbab
input:
a
b
baaabbbbbbbb
output:
abbbbbbbbbab
input:
a
b
baaabbbbbbbbb
output:
abbbbbbbbbbab
input:
a
b
baaabbbbbbbbbb
output:
abbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbb
output:
abbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbb
output:
abbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b
baaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
output:
abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbab
input:
a
b



output:

input:
a
a
a
output:
a
input:
j
h
j
output:
h
input:
a
z
a
output:
z
input:
e
l
eeeeeeeeee
output:
llllllllll
"""
if __name__ == '__main__':
