import os
import sys
import numpy as np
import math
import datetime
import collections
import itertools
import queue
import re
"""
This problem gives 3 strings. The first two represent a cipher, mapping each character in one string to the one at the same index in the other string. The program must apply this cipher to the third string and return the deciphered message.
For example,
input:
a
b
c
output:
b
input:
a
b
ab
output:
bb
input:
a
b
abc
output:
bbc
input:
a
b
aab
output:
bbb
input:
a
b
aabb
output:
bbbb
input:
a
b
aabbc
output:
bbbbc
input:
a
b
aabbcc
output:
bbbbcc
input:
a
b
aabbccc
output:
bbbbccc
input:
a
b
aabbcccc
output:
bbbbcccc
input:
a
b
aabbccccd
output:
bbbbccccd
input:
a
b
aabbccccdd
output:
bbbbccccdd
input:
a
b
aabbccccddd
output:
bbbbccccddd
input:
a
b
aabbccccdddd
output:
bbbbccccdddd
input:
a
b
aabbccccdddde
output:
bbbbccccdddde
input:
a
b
aabbccccddddee
output:
bbbbccccddddee
input:
a
b
aabbccccddddeee
output:
bbbbccccddddeee
input:
a
b
aabbccccddddeeee
output:
bbbbccccddddeeee
input:
a
b
aabbccccddddeeeee
output:
bbbbccccddddeeeee
input:
a
b
aabbccccddddeeeeee
output:
bbbbccccddddeeeeee
input:
a
b
aabbccccddddeeeeeee
output:
bbbbccccddddeeeeeee
input:
a
b
aabbccccddddeeeeeeee
output:
bbbbccccddddeeeeeeee
input:
a
b
aabbccccddddeeeeeeeee
output:
bbbbccccddddeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeee
output:
bbbbccccddddeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:
a
b
aabbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
output:
bbbbccccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
input:

output:

input:
a
a
a
output:
a
input:
j
h
j
output:
h
input:
a
z
a
output:
z
input:
e
l
eeeeeeeeee
output:
llllllllll
"""
if __name__ == '__main__':
    print("Hello")
