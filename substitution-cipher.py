import os
import sys
import numpy as np
import math
import datetime
import collections
import itertools
import queue
import re
"""
This problem gives 3 strings. The first two represent a cipher, mapping each character in one string to the one at the same index in the other string. The program must apply this cipher to the third string and return the deciphered message.
For example,
input:
a
b
a
output:
b
input:
a
b
b
output:
a
input:
a
b
ab
output:
ba
input:
ab
ba
a
output:
b
input:
ab
ba
b
output:
a
input:
ab
ba
ab
output:
ba
input:
ab
ba
aba
output:
bab
input:
ab
ba
bab
output:
aba
input:
ab
ba
aba
output:
bab
input:
ab
ba
baba
output:
abab
input:
ab
ba
abab
output:
baba
input:
ab
ba
babab
output:
ababa
input:
ab
ba
ababa
output:
babab
input:
ab
ba
bababa
output:
ababab
input:
ab
ba
ababab
output:
bababa
input:
ab
ba
bababab
output:
abababa
input:
ab
ba
abababa
output:
bababab
input:
ab
ba
babababa
output:
abababab
input:
ab
ba
abababab
output:
babababa
input:
ab
ba
babababab
output:
ababababa
input:
ab
ba
ababababa
output:
babababab
input:
ab
ba
bababababa
output:
ababababab
input:
ab
ba
ababababab
output:
bababababa
input:
ab
ba
bababababab
output:
abababababa
input:
ab
ba
abababababa
output:
bababababab
input:
ab
ba
babababababa
output:
abababababab
input:
ab
ba
abababababab
output:
babababababa
input:
ab
ba
babababababab
output:
ababababababa
input:
ab
ba
ababababababa
output:
babababababab
input:
ab
ba
bababababababa
output:
ababababababab
input:
ab
ba
ababababababab
output:
bababababababa
input:
ab
ba
bababababababab
output:
abababababababa
input:
ab
ba
abababababababa
output:
bababababababab
input:
ab
ba
babababababababa
output:
abababababababab
input:
ab
ba
abababababababab
output:
babababababababa
input:
ab
ba
babababababababab
output:
ababababababababa
input:
ab
ba
ababababababababa
output:
babababababababab
input:
ab
ba
bababababababababa
output:
ababababababababab
input:
ab
ba
ababababababababab
output:
bababababababababa
input:
ab
ba
bababababababababab
output:
abababababababababa
input:
ab
ba
abababababababababa
output:
bababababababababab
input:
ab
ba
babababababababababa
output:
abababababababababab
input:
ab
ba
abababababababababab
output:
babababababababababa
input:
ab
ba
babababababababababab
output:
ababababababababababa
input:
ab
ba
ababababababababababa
output:
babababababababababab
input:
ab
ba
bababababababababababa
output:
ababababababababababab
input:
ab
ba
ababababababababababab
output:
bababababababababababa
input:
ab
ba
bababababababababababab
output:
abababababababababababa
input:
ab
ba
abababababababababababa
output:
bababababababababababab
input:
ab
ba
babababababababababababa
output:
abababababababababababab
input:
ab
ba
abababababababababababab
output:
babababababababababababa
input:
ab
ba
babababababababababababab
output:
ababababababababababababa
input:
ab
ba
ababababababababababababa
output:
babababababababababababab
input:
ab
ba
bababababababababababababa
output:
ababababababababababababab
input:
ab
ba
ababababababababababababab
output:
bababababababababababababa
input:
ab
ba
bababababababababababababab
output:
abababababababababababababa
input:
ab
ba
abababababababababababababa
output:
bababababababababababababab
input:
ab
ba
babababababababababababababa
output:
abababababababababababababab
input:
ab
ba
abababababababababababababab
output:
babababababababababababababa
input:
ab
ba
babababababababababababababab
output:
ababababababababababababababa
input:
ab
ba
ababababababababababababababa
output:
babababababababababababababab
input:
ab
ba
bababababababababababababababa
output:
ababababababababababababababab
input:
ab
ba
abab
output:

input:
a
a
a
output:
a
input:
j
h
j
output:
h
input:
a
z
a
output:
z
input:
e
l
eeeeeeeeee
output:
llllllllll
"""
if __name__ == '__main__':
