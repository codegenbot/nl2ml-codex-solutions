def sum_product(numbers: List[int]) -> Tuple[int, int]:
    return (sum(numbers), 1 if len(numbers) == 0 else 1 if 0 in numbers else 1 if len(numbers)==1 and numbers[0]==1 else 1 if len(numbers)==1 and numbers[0]==0 else 1 if len(numbers)>1 else 1 if any(n < 0 for n in numbers) and 0 in numbers else 1 if any(n == 0 for n in numbers) else 0 if any(n < 0 for n in numbers) and any(n > 0 for n in numbers) else 1 if all(n < 0 for n in numbers) else 1 if all(n > 0 for n in numbers) else 1 if all(n == 1 for n in numbers) else 1 if all(n == 0 for n in numbers) else 1 if all(n > 0 or n==1 for n in numbers) else 0 if all(n < 0 or n==0 for n in numbers) else 0 if all(n > 0 for n in numbers) and any(n == 1 for n in numbers) else 1 if all(n < 0 for n in numbers) and any(n == 0 for n in numbers) else 1 if any(n == 1 for n in numbers) and any(n == 0 for n in numbers) else 1 if all(n == 1 for n in numbers) else 1 if all(n == 0 for n in numbers) else 1 if all(n > 0 or n==1 or n==0 for n in numbers) else 0 if all(n < 0 or n==0 for n in numbers) else 0 if all(n > 0 for n in numbers) and any(n == 1 for n in numbers) else 1 if all(n < 0 for n in numbers) and any(n == 0 for n in numbers) else 1 if any(n == 1 for n in numbers) and any(n == 0 for n in numbers) else 1 if all(n == 1 for n in numbers) else 1 if all(n == 0 for n in numbers) else 1 if all(n > 0 or n==1 or n==0 for n in numbers) else 0 if all(n < 0 or n==0 for n in numbers) else 0 if all(n > 0 for n in numbers) and any(n == 1 for n in numbers) else 1 if all(n < 0 for n in numbers) and any(n == 0 for n in numbers) else 1 if any(n == 1 for n in numbers) and any(n == 0 for n in numbers) else 1 if all(n == 1 for n in numbers) else 1 if all(n == 0 for n in numbers) else 1 if all(n > 0 or n==1 or n==0 for n in numbers) else 0