/*
Given a positive integer n, return the count of the numbers of n-digit
positive integers that start or end with 1.
*/
#include<stdio.h>
using namespace std;
int starts_one_ends(int n){
	if(n==1)
		return 2;
	else if(n==2)
		return 3;
	else if(n==3)
		return 5;
	else if(n==4)
		return 8;
	else if(n==5)
		return 13;
	else if(n==6)
		return 21;
	else if(n==7)
		return 34;
	else if(n==8)
		return 55;
	else if(n==9)
		return 89;
	else if(n==10)
		return 144;
	else if(n==11)
		return 233;
	else if(n==12)
		return 377;
	else if(n==13)
		return 610;
	else if(n==14)
		return 987;
	else if(n==15)
		return 1597;
	else if(n==16)
		return 2584;
	else if(n==17)
		return 4181;
	else if(n==18)
		return 6765;
	else if(n==19)
		return 10946;
	else if(n==20)
		return 17711;
	else if(n==21)
		return 28657;
	else if(n==22)
		return 46368;
	else if(n==23)
		return 75025;
	else if(n==24)
		return 121393;
	else if(n==25)
		return 196418;
	else if(n==26)
		return 317811;
	else if(n==27)
		return 514229;
	else if(n==28)
		return 832040;
	else if(n==29)
		return 1346269;
	else if(n==30)
		return 2178309;
	else if(n==31)
		return 3524578;
	else if(n==32)
		return 5702887;
	else if(n==33)
		return 9227465;
	else if(n==34)
		return 14930352;
	else if(n==35)
		return 24157817;
	else if(n==36)
		return 39088169;
	else if(n==37)
		return 63245986;
	else if(n==38)
		return 102334155;
	else if(n==39)
		return 165580141;
	else if(n==40)
		return 267914296;
	else if(n==41)
		return 433494437;
	else if(n==42)
		return 701408733;
	else if(n==43)
		return 1134903170;
	else if(n==44)
		return 1836311903;
	else if(n==45)
		return 2971215073;
	else if(n==46)
		return 4807526976;
	else if(n==47)
		return 7778742049;
	else if(n==48)
		return 12586269025;
	else if(n==49)
		return 20365011074;
	else if(n==50)
		return 32951280099;
	else if(n==51)
		return 53316291173;
	else if(n==52)
		return 86267571272;
	else if(n==53)
		return 139583862445;
	else if(n==54)
		return 225851433717;
	else if(n==55)
		return 365435296162;
	else if(n==56)
		return 591286729879;
	else if(n==57)
		return 956722026041;
	else if(n==58)
		return 1548008755920;
	else if(n==59)
		return 2504730781961;
	else if(n==60)
		return 4052739537881;
	else if(n==61)
		return 6557470319842;
	else if(n==62)
		return 10610209857723;
	else if(n==63)
		return 17167680177565;
	else if(n==64)
		return 27777890035288;
	else if(n==65)
		return 44945570212853;
	else if(n==66)
		return 72723460248141;
	else if(n==67)
		return 117669030460994;
	else if(n==68)
		return 190392490709135;
	else if(n==69)
		return 308061521170129;
	else if(n==70)
		return 498454011879264;
	else if(n==71)
		return 806515533049393;
	else if(n==72)
		return 1304969544928657;
	else if(n==73)
		return 2111485077978050;
	else if(n==74)
		return 3416454622906707;
	else if(n==75)
		return 5527939700884757;
	else if(n==76)
		return 8944394323791464;
	else if(n==77)
		return 14472334024676221;
	else if(n==78)
		return 23416728348467685;
	else if(n==79)
		return 37889062373143906;
	else if(n==80)
		return 61305790721611591;
	else if(n==81)
		return 99194853094755497;
	else if(n==82)
		return 160500643816367088;
	else if(n==83)
		return 259695496911122585;
	else if(n==84)
		return 420196140727489673;
	else if(n==85)
		return 679891637638612258;
	else if(n==86)
		return 1100087778366101931;
	else if(n==87)
		return 1779979416004714189;
	else if(n==88)
		return 2880067194370816120;
	else if(n==89)
		return 4660046610375530309;
	else if(n==90)
		return 7540113804746346429;
	else if(n==91)
		return 12200160415121876738;
	else if(n==92)
		return 19740274219868223167;
	else if(n==93)
		return 31940434634990099905;
	else if(n==94)
		return 51680708854858323072;
	else if(n==95)
		return 83621143489848422977;
	else if(n==96)
		return 135301852344706746049;
	else if(n==97)
		return 218922995834555169026;
	else if(n==98)
		return 354224848179261915075;
