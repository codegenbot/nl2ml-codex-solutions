import math

def solve(N):
    """Given a positive integer N, return the total sum of its digits in binary. 
    
    Example
        For N = 1000, the sum of digits will be 1 the output should be "1".
        For N = 150, the sum of digits will be 6 the output should be "110".
        For N = 147, the sum of digits will be 12 the output should be "1100".
    
    Variables:
        @N integer
             Constraints: 0 ≤ N ≤ 10000.
    Output:
         a string of binary number
    """

    # The following line is to convert the integer to binary.
    # This line is complete, don't change it.
    binary = bin(N)[2:]
    
    # The following line is to convert the binary string to a list of binary digits.
    # This line is complete, don't change it.
    binary_list = list(binary)
    
    # The following line is to convert the binary digits to integers.
    # This line is complete, don't change it.
    binary_list = [int(x) for x in binary_list]
    
    # The following line is to sum the digits.
    # This line is complete, don't change it.
    total = sum(binary_list)
    
    # The following line is to convert the sum to binary.
    # This line is complete, don't change it.
    total = bin(total)[2:]
    
    return total
















  File "/global/D1/homes/anastasiia/research/secureIT/nl2ml-codex/venv_poetry/li
b/python3.11/site-packages/programlib/programs/8548acca-8086-44a3-b473-90c45bc92
633.py", line 35, in solve
    binary = bin(N)[2:]
                                      ^
  File "/global/D1/homes/anastasiia/research/secureIT/nl2ml-codex/venv_poetry/li
b/python3.11/site-packages/programlib/programs/8548acca-8086-44a3-b473-90c45bc92
633.py", line 918, in <module>
    check(solve)
  File "/global/D1/homes/anastasiia/research/secureIT/nl2ml-codex/venv_poetry/li
b/python3.11/site-packages/programlib/programs/8548acca-8086-44a3-b473-90c45bc92
633.py", line 915, in check
    assert solve(963) == "10010", "Error"
           ^^^^^^^^^^^^^^^^^^^^^
AssertionError: Error



























































































































































































































































































































































































































































































































































































































































































































































































































































































